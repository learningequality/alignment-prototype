##################################################
# MIT License
#
# Copyright (c) 2019 Learning Equality
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
##################################################

"""
Django settings for alignmentpro project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = os.path.abspath(os.path.join(BASE_DIR, ".."))

STATIC_ROOT = os.getenv("STATICFILES_DIR") or os.path.join(BASE_DIR, "static")
MEDIA_ROOT = os.path.join(BASE_DIR, "..", "files")
SCANS_ROOT = os.path.join(MEDIA_ROOT, "scans")
UPLOADS_ROOT = os.path.join(MEDIA_ROOT, "uploads")
MEDIA_URL = "/files/"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "uzg!6^y3pio6*^c5xjewtq(hdigl*q#q5s9b6^@c1-40v+y2k9"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.sites",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "treebeard",  # for TreeAdmin views
    "alignmentapp",
    "corsheaders",
    # "commonstandardsproject",  # was only needed to extract CCSS and NGSS data
    "importing",
    "django_extensions",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.github",
    "webpack_loader",
    "django_filters",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "alignmentpro.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "alignmentpro.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "alignmentpro",
        "USER": os.getenv("DB_USER") or "postgres",
        "PASSWORD": os.getenv("DB_PASS") or "password",
        "HOST": os.getenv("DB_HOST") or "localhost",
        "PORT": "",
    },
    "standards": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "standards",
        "USER": os.getenv("DB_USER") or "postgres",
        "PASSWORD": os.getenv("DB_PASS") or "password",
        "HOST": os.getenv("DB_HOST") or "localhost",
        "PORT": "",
    },
}

# DATABASE_ROUTERS = ["alignmentpro.dbrouters.DbRouter"]


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = []

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

SITE_ID = 1

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"

ALLOWED_HOSTS = ["*"]  # In production, we serve through a file socket, so this is OK.


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
}


# Data fixturees dir
CURRICULUM_DOCS_FIXTURES_DIR = os.path.join(
    BASE_DIR, "..", "imports", "curriculumdocuments"
)
CURRICULUM_DOCS_CSVS_DIR = os.path.join(BASE_DIR, "..", "imports", "gsheetscsvs")


# Data export paths and constnts
DATA_EXPORT_DIR = os.path.join("exports", "data")
DATA_EXPORT_BASE_DIR = os.path.join(MEDIA_ROOT, DATA_EXPORT_DIR)
MODELS_BASE_DIR = os.path.join(MEDIA_ROOT, "models")
DATA_EXPORT_URL = "{}{}".format(MEDIA_URL, DATA_EXPORT_DIR)
CURRICULUM_DOCUMENTS_FILENAME = "curriculumdocuments.csv"
STANDARD_NODES_FILENAME = "standardnodes.csv"
HUMAN_JUDGMENTS_FILENAME = "humanjudgments.csv"
HUMAN_JUDGMENTS_TEST_FILENAME = "humanjudgments_test.csv"
USERPROFILES_FILENAME = "userprofiles.csv"
METADATA_FILENAME = "metadata.json"

# in production, we'd want to limit this, but for hackathon purposes
# we want to make sure everyone doing local dev can reach the API.
# TODO: switch to whitelist once in production, via instructions at:
# https://pypi.org/project/django-cors-headers/
CORS_ORIGIN_ALLOW_ALL = True

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

WEBPACK_LOADER = {
    "DEFAULT": {
        "CACHE": False,
        "BUNDLE_DIR_NAME": "bundles/",  # must end with slash
        "STATS_FILE": os.path.join(ROOT_DIR, "webpack-stats.json"),
        "POLL_INTERVAL": 0.1,
        "TIMEOUT": None,
        "IGNORE": [r".+\.hot-update.js", r".+\.map"],
    }
}
